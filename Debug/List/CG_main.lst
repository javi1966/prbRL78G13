###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.10.1.30008 [Kickstart] for RL78 06/Apr/2012  09:12:04 #
# Copyright 2011 IAR Systems AB.                                              #
#                                                                             #
#    Core         =  rl78_1                                                   #
#    Code model   =  Near                                                     #
#    Data model   =  Near                                                     #
#                 =                                                           #
#    Source file  =  D:\DESARROLLOS\prbRL78G13\applilet3_src\CG_main.c        #
#    Command line =  D:\DESARROLLOS\prbRL78G13\applilet3_src\CG_main.c        #
#                    --core rl78_1 --code_model near --data_model near        #
#                    --near_const_location rom0 -o                            #
#                    D:\DESARROLLOS\prbRL78G13\Debug\Obj\ --dlib_config       #
#                    "D:\Archivos de programa\IAR Systems\Embedded Workbench  #
#                    6.0 Kickstart\rl78\LIB\dlrl78nn1n.h" -e -Ol --no_cse     #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --debug -lCN D:\DESARROLLOS\prbRL78G13\Debug\List\ -I    #
#                    D:\DESARROLLOS\prbRL78G13\user_include\                  #
#    List file    =  D:\DESARROLLOS\prbRL78G13\Debug\List\CG_main.lst         #
#    Object file  =  D:\DESARROLLOS\prbRL78G13\Debug\Obj\CG_main.r87          #
#                                                                             #
#                                                                             #
###############################################################################

D:\DESARROLLOS\prbRL78G13\applilet3_src\CG_main.c
      1          /*
      2          *******************************************************************************
      3          * Copyright(C) 2011 Renesas Electronics Corporation
      4          * RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY
      5          * This program must be used solely for the purpose for which
      6          * it was furnished by Renesas Electronics Corporation. No part of this
      7          * program may be reproduced or disclosed to others, in any
      8          * form, without the prior written permission of Renesas Electronics
      9          * Corporation. 
     10          *
     11          * This device driver was created by Applilet3 for RL78/G13
     12          * 16-Bit Single-Chip Microcontrollers
     13          * Filename:	CG_main.c
     14          * Abstract:	This file implements main function.
     15          * APIlib:	Applilet3 for RL78/G13 E1.00b [14 Jan 2011]
     16          * Device:	R5F100LE
     17          * Compiler:	IAR Systems iccrl78
     18          * Creation date:	06/04/2012
     19          *******************************************************************************
     20          */
     21          
     22          /*
     23          *******************************************************************************
     24          ** Include files
     25          *******************************************************************************
     26          */
     27          #include "CG_macrodriver.h"
     28          #include "CG_system.h"
     29          #include "CG_port.h"
     30          #include "CG_wdt.h"
     31          #include "CG_it.h"
     32          /* Start user code for include. Do not edit comment generated here */
     33          /* End user code. Do not edit comment generated here */
     34          #include "CG_userdefine.h"
     35          
     36          /*
     37          *******************************************************************************
     38          **  Global define
     39          *******************************************************************************
     40          */
     41          /* Set option bytes */
     42          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     43          __root const UCHAR opbyte0 = 0xFFU;
   \                     opbyte0:
   \   000000 FF                    DB 255
     44          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     45          __root const UCHAR opbyte1 = 0x73U;
   \                     opbyte1:
   \   000000 73                    DB 115
     46          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     47          __root const UCHAR opbyte2 = 0xE8U;
   \                     opbyte2:
   \   000000 E8                    DB 232
     48          #pragma location = "OPTBYTE"

   \                                 In  segment OPTBYTE, align 1, root
     49          __root const UCHAR opbyte3 = 0x84U;
   \                     opbyte3:
   \   000000 84                    DB 132
     50          
     51          /* Set security ID */
     52          #pragma location = "SECUID"

   \                                 In  segment SECUID, align 2, root
     53          __root const UCHAR secuid[10] = 
   \                     secuid:
   \   000000 FFFFFFFFFFFF          DB 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
     54          	{0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU, 0xFFU};
     55          /* Start user code for global. Do not edit comment generated here */
     56          /* End user code. Do not edit comment generated here */
     57          
     58          /*
     59          **-----------------------------------------------------------------------------
     60          **
     61          **  Abstract:
     62          **	This function implements main function.
     63          **
     64          **  Parameters:
     65          **	None
     66          **
     67          **  Returns:
     68          **	None
     69          **
     70          **-----------------------------------------------------------------------------
     71          */

   \                                 In  segment CODE, align 1, keep-with-next
     72          void  main(void)
   \                     main:
     73          {
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000                       ; Auto size: 0
     74              IT_Start();                                            
   \   000000 FD....                CALL      IT_Start
     75          	while (1U)
   \                     ??main_0:
   \   000003 EFFE                  BR        S:??main_0
   \   000005                       REQUIRE ?CLRL78_V1_0_L00
     76          	{
     77          		;
     78          	}
     79          	/* End user code. Do not edit comment generated here */
     80          }
     81          
     82          /* Start user code for adding. Do not edit comment generated here */
     83          /* End user code. Do not edit comment generated here */

   Segment part sizes:

     Function/Label Bytes
     -------------- -----
     opbyte0           1
     opbyte1           1
     opbyte2           1
     opbyte3           1
     secuid           10
     main              5

 
  5 bytes in segment CODE
  4 bytes in segment OPTBYTE
 10 bytes in segment SECUID
 
  5 bytes of CODE  memory
 14 bytes of CONST memory

Errors: none
Warnings: none
