###############################################################################
#                                                                             #
# IAR C/C++ Compiler V1.10.4.30019 [Kickstart] for RL78 31/May/2012  18:44:40 #
# Copyright 2011 IAR Systems AB.                                              #
#                                                                             #
#    Core         =  rl78_1                                                   #
#    Code model   =  Near                                                     #
#    Data model   =  Near                                                     #
#                 =                                                           #
#    Source file  =  C:\DESARROLLOS\PrbRL78\applilet3_src\CG_it_user.c        #
#    Command line =  C:\DESARROLLOS\PrbRL78\applilet3_src\CG_it_user.c        #
#                    --core rl78_1 --code_model near --data_model near        #
#                    --near_const_location rom0 -o                            #
#                    C:\DESARROLLOS\PrbRL78\Debug\Obj\ --dlib_config          #
#                    "C:\Program Files\IAR Systems\Embedded Workbench 6.0     #
#                    Kickstart\rl78\LIB\dlrl78nn1n.h" -e -Ol --no_cse         #
#                    --no_unroll --no_inline --no_code_motion --no_tbaa       #
#                    --debug -lCN C:\DESARROLLOS\PrbRL78\Debug\List\ -I       #
#                    C:\DESARROLLOS\PrbRL78\user_include\                     #
#    List file    =  C:\DESARROLLOS\PrbRL78\Debug\List\CG_it_user.lst         #
#    Object file  =  C:\DESARROLLOS\PrbRL78\Debug\Obj\CG_it_user.r87          #
#                                                                             #
#                                                                             #
###############################################################################

C:\DESARROLLOS\PrbRL78\applilet3_src\CG_it_user.c
      1          /*
      2          *******************************************************************************
      3          * Copyright(C) 2011 Renesas Electronics Corporation
      4          * RENESAS ELECTRONICS CONFIDENTIAL AND PROPRIETARY
      5          * This program must be used solely for the purpose for which
      6          * it was furnished by Renesas Electronics Corporation. No part of this
      7          * program may be reproduced or disclosed to others, in any
      8          * form, without the prior written permission of Renesas Electronics
      9          * Corporation. 
     10          *
     11          * This device driver was created by Applilet3 for RL78/G13
     12          * 16-Bit Single-Chip Microcontrollers
     13          * Filename:	CG_it_user.c
     14          * Abstract:	This file implements device driver for IT module.
     15          * APIlib:	Applilet3 for RL78/G13 E1.00b [14 Jan 2011]
     16          * Device:	R5F100LE
     17          * Compiler:	IAR Systems iccrl78
     18          * Creation date:	9/21/2011
     19          *******************************************************************************
     20          */
     21          
     22          /*
     23          *******************************************************************************
     24          ** Include files
     25          *******************************************************************************
     26          */
     27          #include "CG_macrodriver.h"
     28          #include "CG_it.h"
     29          /* Start user code for include. Do not edit comment generated here */
     30          #include "CG_int.h"
     31          /* End user code. Do not edit comment generated here */
     32          #include "CG_userdefine.h"
     33          
     34          /*
     35          *******************************************************************************
     36          **  Global define
     37          *******************************************************************************
     38          */
     39          /* Start user code for global. Do not edit comment generated here */
     40          extern unsigned char mute;

   \                                 In  segment NEAR_Z, align 2, align-sorted
     41          volatile int G_msTimer = 0;   // Timer Counter
   \                     G_msTimer:
   \   000000                       DS 2
   \   000002                       REQUIRE __INIT_NEAR_Z
     42          /* End user code. Do not edit comment generated here */
     43          
     44          /*
     45          **-----------------------------------------------------------------------------
     46          **
     47          **  Abstract:
     48          **	This function is INTIT interrupt service routine.
     49          **
     50          **  Parameters:
     51          **	None
     52          **
     53          **  Returns:
     54          **	None
     55          **
     56          **-----------------------------------------------------------------------------
     57          */
     58          #pragma vector = INTIT_vect

   \                                 In  segment CODE, align 1, keep-with-next
     59          __interrupt void MD_INTIT(void)
   \                     MD_INTIT:
     60          {
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000                       ; Auto size: 0
     61          	/* Start user code. Do not edit comment generated here */
     62                  //INTP2_Enable(); // Disable for LCD stuff
     63                  //IT_Stop();
     64                  G_msTimer++;
   \   000000 A2....                INCW      N:G_msTimer
     65          	/* End user code. Do not edit comment generated here */
     66          }
   \   000003 61FC                  RETI      
   \   000005                       REQUIRE ?CLRL78_V1_0_L00
     67          
     68          /* Start user code for adding. Do not edit comment generated here */

   \                                 In  segment CODE, align 1, keep-with-next
     69          void delay_ms(int aTimeMS)
   \                     delay_ms:
     70          {
   \   000000                       ; * Stack frame (at entry) *
   \   000000                       ; Param size: 0
   \   000000 C3                    PUSH      BC
   \   000001 C5                    PUSH      DE
   \   000002                       ; Auto size: 0
   \   000002 14                    MOVW      DE, AX
     71              G_msTimer = 0;
   \   000003 F6                    CLRW      AX
   \   000004 BF....                MOVW      N:G_msTimer, AX
     72              IT_Start();
   \   000007 FD....                CALL      IT_Start
     73              while(G_msTimer < aTimeMS);
   \                     ??delay_ms_0:
   \   00000A C5                    PUSH      DE
   \   00000B C2                    POP       BC
   \   00000C AF....                MOVW      AX, N:G_msTimer
   \   00000F FD....                CALL      N:?SI_CMP_L02
   \   000012 DCF6                  BC        ??delay_ms_0
     74              IT_Stop();
   \   000014 FD....                CALL      IT_Stop
     75          }
   \   000017 C4                    POP       DE
   \   000018 C2                    POP       BC
   \   000019 D7                    RET       
   \   00001A                       REQUIRE ?CLRL78_V1_0_L00

   \                                 In  segment INTVEC, offset 0x38, root
   \                     `??MD_INTIT??INTVEC 56`:
   \   000038 ....                  DW MD_INTIT
     76          /* End user code. Do not edit comment generated here */

   Segment part sizes:

     Function/Label        Bytes
     --------------        -----
     G_msTimer                2
     MD_INTIT                 5
     delay_ms                26
     ??MD_INTIT??INTVEC 56    2

 
 31 bytes in segment CODE
  2 bytes in segment INTVEC
  2 bytes in segment NEAR_Z
 
 31 bytes of CODE memory (+ 2 bytes shared)
  2 bytes of DATA memory

Errors: none
Warnings: none
